{"version":3,"sources":["components/landing-page.js","components/search-form.js","components/search.js","validators.js","components/input.js","config.js","actions/index.js","local-storage.js","components/login-form.js","components/registration-form.js","components/welcome.js","components/app.js","reducers/index.js","store.js","index.js"],"names":["connect","state","loggedIn","currentUser","props","react_default","a","createElement","Redirect","to","className","role","Link","AddForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelectChange","event","preventDefault","target","value","onGetCategory","onChange","bind","assertThisInitialized","name","autofocus","React","Component","length","field","auth","search_form_AddForm","Input","prevProps","meta","active","input","focus","error","warning","touched","htmlFor","label","assign","id","type","ref","API_BASE_URL","process","REACT_APP_API_BASE_URL","authError","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","code","status","message","statusText","storeAuthInfo","authToken","dispatch","decodedToken","jwtDecode","setAuthToken","user","localStorage","setItem","e","saveAuthToken","login","username","password","fetch","concat","method","Content-Type","body","JSON","stringify","_ref","catch","SubmissionError","_error","required","undefined","nonEmpty","trim","isTrimmed","LoginForm","_React$Component","onSubmit","inherits","createClass","key","values","_this2","aria-live","handleSubmit","Field","component","validate","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","apply","arguments","firstName","lastName","content-type","reason","location","defineProperty","registerUser","keys","Welcome","person","App","BrowserRouter","Route","exact","path","render","LandingPage","search","initialState","loading","category","store","createStore","combineReducers","formReducer","reducer","action","applyMiddleware","thunk","ReactDOM","es","app","document","getElementById"],"mappings":"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","file":"static/js/main.ae152e80.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport { Link, Redirect} from 'react-router-dom';\n\n\n\nexport function LandingPage(props)  {\n    // If we are logged in redirect straight to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/in/search\" />;\n    }\n\n    return (\n        <section className=\"intro\">\n\n        <header role=\"banner\">\n\n\n            {/* <h1>Trendlier</h1> */}\n\n            <p>Trendlier is for those who like to keep on top of the latest gadgets and trends. </p>\n            <p>Get a list of the top ten hottest items in each category, listed in descending order based on popularity.</p>\n            <p>Purchase your favorites or save them in your wishlist.</p>\n            <Link to=\"/users/login\">Sign In</Link>\n            <Link to=\"/users/create\">Sign Up</Link>\n\n        </header>\n    </section>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.currentUser \n});\n\nexport default connect(mapStateToProps)(LandingPage);\n\n\n\n\n","import React from 'react';\n\n\n\nexport default class AddForm extends React.Component {\n    constructor(props) {\n        super(props);\n        \n\n        this.onChange = this.onChange.bind(this);\n    }\n        \n      handleSelectChange = (event) => {\n        event.preventDefault();\n        const category = event.target.value;\n        if (category && this.props.onGetCategory) {\n            this.props.onGetCategory(this.event.target.value);\n        }\n        \n    }\n\n    render() {\n        return (\n            <form className=\"js-search-form\">\n                \n                <label className=\"search-label\">Please select a category from the drop down menu:\n                    <select name=\"category\" className=\"category-name\" autofocus\n                    onChange={this.handleSelectChange}>\n                        <option>Category</option>\n                        <option value=\"abcat0401000\">Digital Cameras</option>\n                        <option value=\"pcmcat242800050021\">Health, Fitness & Beauty</option>\n                        <option value=\"abcat0204000\">Headphones</option>\n                        <option value=\"pcmcat241600050001\">Home Audio</option>\n                        <option value=\"pcmcat254000050002\">Home Automation & Security</option>\n                        <option value=\"pcmcat209000050006\">iPad, Tablets & E-Readers</option>\n                        <option value=\"abcat0502000\">Laptops</option>\n                        <option value=\"pcmcat310200050004\">Portable & Wireless Speakers</option>\n                        <option value=\"abcat0101000\">TVs</option>\n                    </select>\n                </label>\n                \n            </form>\n        );\n    }\n}\n\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { Redirect} from 'react-router-dom';\n\nimport  SearchForm  from './search-form';\n\nexport function SearchPage(props) {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    if (!props.loggedIn) {\n        return <Redirect to =\"/\" />;\n    }\n    return (\n        <div className=\"search-form\">\n            \n            <SearchForm />\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(SearchPage);","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <input\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={input => (this.input = input)}\n                />\n            </div>\n        );\n    }\n}","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL ||  \"https://trendlier-server-capstone.herokuapp.com\";","import jwtDecode from 'jwt-decode';\nimport {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../config';\n\nimport {saveAuthToken, clearAuthToken} from '../local-storage';\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n    type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n    type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n    type: AUTH_SUCCESS,\n    currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n    type: AUTH_ERROR,\n    error\n});\n\nexport const GET_CATEGORY = 'GET_CATEGORY';\nexport const getCategory = category => ({\n    type: GET_CATEGORY,\n    category\n});\n\n\n\n\n// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n    const decodedToken = jwtDecode(authToken);\n    dispatch(setAuthToken(authToken));\n    dispatch(authSuccess(decodedToken.user));\n    saveAuthToken(authToken);\n};\n\n// gets credentials for login in a user in login form or in registration form\nexport const login = (username, password) => dispatch => {\n    dispatch(authRequest());\n    return (\n        fetch(`${API_BASE_URL}/users/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        })\n            // Reject any requests which don't return a 200 status, creating\n            // errors which follow a consistent format\n            .then(res => normalizeResponseErrors(res))\n            .then(res => res.json())\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n            .catch(err => {\n                const {code} = err;\n                const message =\n                    code === 401\n                        ? 'Incorrect username or password'\n                        : 'Unable to login, please try again';\n                dispatch(authError(err));\n                // Could not authenticate, so return a SubmissionError for Redux\n                // Form\n                return Promise.reject(\n                    new SubmissionError({\n                        _error: message\n                    })\n                );\n            })\n    );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n    dispatch(authRequest());\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\n        method: 'POST',\n        headers: {\n            // Provide our existing token as credentials to get a new one\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n        .catch(err => {\n            // We couldn't get a refresh token because our current credentials\n            // are invalid or expired, or something else went wrong, so clear\n            // them and sign us out\n            dispatch(authError(err));\n            dispatch(clearAuth());\n            clearAuthToken(authToken);\n        });\n};\n\nexport const registerUser = user => dispatch => {\n    return fetch(`${API_BASE_URL}/users/create`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .catch(err => {\n            const {reason, message, location} = err;\n            if (reason === 'ValidationError') {\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\n                return Promise.reject(\n                    new SubmissionError({\n                        [location]: message\n                    })\n                );\n            }\n        });\n};\n\n","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    try {\n        localStorage.setItem('authToken', authToken);\n    } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n    try {\n        localStorage.removeItem('authToken');\n    } catch (e) {}\n};","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport Input from './input';\n\nimport {login} from '../actions';\nimport {required, nonEmpty} from '../validators';\nimport { Link, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n\n\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n    \n\n    onSubmit(values) {\n        return this.props.dispatch(login(values.username, values.password));\n    }\n\n    render() {\n        let error;\n        if (this.props.error) {\n            error = (\n                <div className=\"form-error\" aria-live=\"polite\">\n                    {this.props.error}\n                </div>\n            );\n        };\n\n        if (this.props.loggedIn) {\n            return <Redirect to=\"/dashboard/search\" />;\n        };\n\n        return (\n            <section className=\"login\">\n            <form\n                className=\"login-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                {error}\n                <fieldset>\n                <legend>Sign In</legend>\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    validate={[required, nonEmpty]}\n                />\n                <button disabled={this.props.pristine || this.props.submitting}>\n                    Log in\n                </button>\n                </fieldset>\n            </form>\n            <Link to=\"/register\">Sign up</Link>\n            </section>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'login',\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport { Link } from \"react-router-dom\";\nimport {registerUser} from '../actions';\nimport {login} from '../actions';\nimport Input from './input';\nimport {required, nonEmpty, matches, length, isTrimmed} from '../validators';\nconst passwordLength = length({min: 4, max: 72});\nconst matchesPassword = matches('password');\n\nexport class RegistrationForm extends React.Component {\n    onSubmit(values) {\n        const {username, password, firstName, lastName} = values;\n        const user = {username, password, firstName, lastName};\n        return this.props\n            .dispatch(registerUser(user))\n            .then(() => this.props.dispatch(login(username, password)));\n    }\n\n    render() {\n        return (\n            <section className=\"signup\">\n            <form\n                className=\"signup-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                <fieldset>\n                    <legend>Sign Up</legend>\n                <label htmlFor=\"firstName\">First name</label>\n                <Field component={Input} type=\"text\" name=\"firstName\" />\n                <label htmlFor=\"lastName\">Last name</label>\n                <Field component={Input} type=\"text\" name=\"lastName\" />\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    validate={[required, nonEmpty, isTrimmed]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    validate={[required, passwordLength, isTrimmed]}\n                />\n                <label htmlFor=\"passwordConfirm\">Confirm password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"passwordConfirm\"\n                    validate={[required, nonEmpty, matchesPassword]}\n                />\n                <button\n                    type=\"submit\"\n                    disabled={this.props.pristine || this.props.submitting}>\n                    Register\n                </button>\n                </fieldset>\n            </form>\n            <Link to=\"/login\">Sign up</Link>\n            </section>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'registration',\n    onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('registration', Object.keys(errors)[0]))\n})(RegistrationForm);","import React from \"react\";\n\nexport default function Welcome(props) {\n  return <p className=\"welcome\">Welcome, {props.person}!</p>;\n}","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport LandingPage from './landing-page';\nimport SearchPage from './search';\nimport  LoginForm  from './login-form';\nimport  RegistrationForm  from './registration-form';\nimport Welcome from \"./welcome\";\n\n\n\n// import './app.css';\n\nclass App extends Component {\n    render() {\n        return (\n           <Router>\n                <div className=\"app\">\n                <Route exact path=\"/dashboard/user\" render={ () => <Welcome person={this.props.loggedIn} />}/>\n                <header>\n                    <h1><Link to=\"/\">Trendlier</Link></h1>\n                </header>    \n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/auth/login\" component={LoginForm} />\n                    <Route exact path=\"/auth/signup\" component={RegistrationForm} />\n                    <Route exact path=\"/dashboard/search\" render={ () => <SearchPage person={this.props.loggedIn} />} />\n                </div>\n                </Router>\n            \n        );\n    }\n}\n\nexport const mapStateToProps = state => ({\n    loggedIn: state.currentUser,\n    error: state.error\n  });\n  \n  export default connect(mapStateToProps)(App);","import * as actions from '../actions';\n\nconst initialState = {\n    authToken: null, // authToken !== null does not mean it has been validated\n    currentUser: null,\n    loading: false,\n    error: null,\n    category: null\n      \n    \n};\n\nexport const reducer = (state = initialState, action) => {\n    if (action.type === actions.SET_AUTH_TOKEN) {\n        return Object.assign({}, state, {\n            authToken: action.authToken,\n            loading: false\n        });\n    } else if (action.type === actions.CLEAR_AUTH) {\n        return Object.assign({}, state, {\n            authToken: null,\n            currentUser: null\n        });\n    } else if (action.type === actions.AUTH_REQUEST) {\n        return Object.assign({}, state, {\n            loading: true,\n            error: null\n        });\n    } else if (action.type === actions.AUTH_SUCCESS) {\n        return Object.assign({}, state, {\n            loading: false,\n            currentUser: action.currentUser\n        });\n    } else if (action.type === actions.AUTH_ERROR) {\n        return Object.assign({}, state, {\n            loading: false,\n            error: action.error\n        });\n    } else if (action.type === actions.GET_CATEGORY) {\n        return Object.assign({}, state, {\n            category: action.category\n        });\n    }\n    return state;\n    }\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\nimport thunk from 'redux-thunk';\nimport {reducer as mainReducer} from './reducers';\n\nconst store = createStore(\n    combineReducers({\n        form: formReducer,\n        reducer: mainReducer\n\n        \n    }),\n    applyMiddleware(thunk)\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}